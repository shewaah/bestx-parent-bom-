<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <!-- -->
  <!-- Configuration for encryptor, based on environment variables. -->
  <!-- -->
  <!-- In this example, the encryption password will be read from an -->
  <!-- environment variable called "APP_ENCRYPTION_PASSWORD" which, once -->
  <!-- the application has been started, could be safely unset. -->
  <!-- -->
    <bean id="environmentVariablesConfiguration" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
    <property name="algorithm" value="PBEWITHSHA1ANDDESEDE" />
    <property name="password" value="AyT0P%c$=lPwQ**" />
  </bean>

  <!-- -->
  <!-- The will be the encryptor used for decrypting configuration values. -->
  <!-- -->
  <bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
    <property name="config" ref="environmentVariablesConfiguration" />
  </bean>

  <!-- -->
  <!-- The EncryptablePropertyPlaceholderConfigurer will read the -->
  <!-- .properties files and make their values accessible as ${var} -->
  <!-- -->
  <!-- Our "configurationEncryptor" bean (which implements -->
  <!-- org.jasypt.encryption.StringEncryptor) is set as a constructor arg. -->
  <!-- -->
    <bean id="propertyConfigurer" class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
    <constructor-arg ref="configurationEncryptor" />
    <property name="locations">
      <list>
        <value>market_credentials.properties</value>
        <value>BESTX.properties</value>
        <value>hibernate.properties</value>
      </list>
    </property>
  </bean>

  <!-- APPLICATION MANAGEMENT -->
  <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
    <property name="locateExistingServerIfPossible" value="true" />
  </bean>

  <bean id="messagesClass" class="it.softsolutions.bestx.Messages">
        <property name="bundleName"><value>${Messages.filename}</value></property>
        <property name="language"><value>${Messages.language}</value></property>
        <property name="country"><value>${Messages.country}</value></property>
  </bean>

    <bean id="bondTypesService" class="it.softsolutions.bestx.services.instrument.BondTypesService">
    <property name="enabledBondTypes">
      <list>
        <value>ATGV</value>
        <value>BEGV</value>
        <value>DEGV</value>
        <value>ESGV</value>
        <value>FIGV</value>
        <value>FRGV</value>
        <value>GRGV</value>
        <value>IEGV</value>
        <value>ITGV</value>
        <value>NLGV</value>
        <value>PTGV</value>
      </list>
    </property>
  </bean>

    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
    <property name="beans">
      <map>
                <entry key="it.softsolutions.bestx.cs:name=ApplicationControl" value-ref="applicationController" />
                <entry key="it.softsolutions.bestx.cs:name=AutomaticCurandoStatus" value-ref="autoCurandoStatusManager" />
                <entry key="it.softsolutions.bestx.cs:name=Oms1FixCustomerConnection" value-ref="oms1CustomerAdapter" />
                <entry key="it.softsolutions.bestx.cs:name=Oms2FixCustomerConnection" value-ref="oms2CustomerAdapter" />
                <entry key="it.softsolutions.bestx.cs:name=BloombergMarketConnection" value-ref="bloombergMarket" />
        <entry key="it.softsolutions.bestx.cs:name=TradewebMarketConnection" value-ref="tradewebMarket" />
        <entry key="it.softsolutions.bestx.cs:name=MarketAxessMarketConnection" value-ref="marketAxessMarket" />
				<entry key="it.softsolutions.bestx.cs:name=MarketAxessConnectionImpl" value-ref="autoExecutionTradeConnector" />
                <entry key="it.softsolutions.bestx.cs:name=NormalPriceService" value-ref="normalPriceService" />
                <entry key="it.softsolutions.bestx.cs:name=LimitFilePriceService" value-ref="limitFilePriceService" />
                <entry key="it.softsolutions.bestx.cs:name=PDOnlyPriceService" value-ref="pDOnlyPriceService" />
                <entry key="it.softsolutions.bestx.cs:name=IB4JOperatorConsoleAdapter" value-ref="ib4jOperatorConsoleAdapter" />
                <entry key="it.softsolutions.bestx.cs:name=MQPriceDiscoveryOperatorConsoleAdapter" value-ref="ib4jOperatorConsoleAdapter" />
                <entry key="it.softsolutions.bestx.cs:name=OperationRestore" value-ref="operationRestore" />
                <entry key="it.softsolutions.bestx.cs:name=DealerRankingService" value-ref="rankingLoaderManager" />
                <entry key="it.softsolutions.bestx.cs:name=OperationRegistry" value-ref="defaultOperationRegistry" />
                <entry key="it.softsolutions.bestx.cs:name=InstrumentFinder" value-ref="dbBasedInstrumentFinder" />
        		<entry key="it.softsolutions.bestx.cs:name=OrdersEndOfDayService" value-ref="ordersEndOfDayService" />
				<entry key="it.softsolutions.bestx.cs:name=BusinessValuesMonitor" value-ref="businessValuesMonitor" />
				<entry key="it.softsolutions.bestx.cs:name=CSStrategy" value-ref="csStrategy" />
				<entry key="it.softsolutions.bestx.cs:name=ApplicationStatusController" value-ref="applicationStatusController" />
				<!-- entry key="bean:name=hibernateStatsMBean"><ref local="hibernateStats"></ref></entry -->
      </map>
    </property>
    <property name="server" ref="mbeanServer" />
    <property name="assembler">
          <bean class="org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler">
        <property name="interfaceMappings">
          <props>
            <prop key="it.softsolutions.bestx.cs:name=ApplicationControl">it.softsolutions.bestx.management.EngineControllerMBean</prop>
            <prop key="it.softsolutions.bestx.cs:name=AutomaticCurandoStatus">it.softsolutions.bestx.management.AutoCurandoStatusMBean</prop>
            <prop key="it.softsolutions.bestx.cs:name=Oms1FixCustomerConnection">it.softsolutions.bestx.management.FixCustomerAdapterMBean</prop>
            <prop key="it.softsolutions.bestx.cs:name=Oms2FixCustomerConnection">it.softsolutions.bestx.management.FixCustomerAdapterMBean</prop>
            <prop key="it.softsolutions.bestx.cs:name=BloombergMarketConnection">it.softsolutions.bestx.management.MarketMXBean</prop>
            <prop key="it.softsolutions.bestx.cs:name=TradewebMarketConnection">it.softsolutions.bestx.management.MarketMXBean</prop>
            <prop key="it.softsolutions.bestx.cs:name=MarketAxessMarketConnection">it.softsolutions.bestx.management.MarketMXBean</prop>
			<prop key="it.softsolutions.bestx.cs:name=MarketAxessConnectionImpl">it.softsolutions.bestx.connections.marketaxess.MarketAxessConnectorMBean</prop>
            <prop key="it.softsolutions.bestx.cs:name=PriceService">it.softsolutions.bestx.management.PriceServiceMBean</prop>
            <prop key="it.softsolutions.bestx.cs:name=OperatorConsoleAdapter">it.softsolutions.bestx.management.OperatorConsoleAdapterMBean</prop>
            <prop key="it.softsolutions.bestx.cs:name=OperationRestore">it.softsolutions.bestx.management.SimpleOperationRestorerMBean</prop>
            <prop key="it.softsolutions.bestx.cs:name=DealerRankingService">it.softsolutions.bestx.management.DealerRankingServiceMBean</prop>
            <prop key="it.softsolutions.bestx.cs:name=InstrumentFinder">it.softsolutions.bestx.management.InstrumentFinderMBean</prop>
            <prop key="it.softsolutions.bestx.cs:name=OrdersEndOfDayService">it.softsolutions.bestx.services.CSOrdersEndOfDayServiceMBean</prop>
			<prop key="it.softsolutions.bestx.cs:name=BusinessValuesMonitor">it.softsolutions.bestx.management.BusinessValuesMonitorMBean</prop>
			<prop key="it.softsolutions.bestx.cs:name=CSStrategy">it.softsolutions.bestx.management.CSStrategyMBean</prop>
          </props>
        </property>
      </bean>
    </property>
  </bean>

  <!-- bean id="hibernateStats" class="org.hibernate.jmx.StatisticsService">
            <property name="statisticsEnabled">
            <value>false</value>
        </property>
       <property name="sessionFactory">
           <ref local="sessionFactory"/>
       </property>
    </bean -->

  <!-- Statistics related to Operation Status Change -->
    <bean id="statisticsOnOperationStateChange" class="it.softsolutions.bestx.management.StatisticsOnOperationStateChange">
  </bean>

  <!-- Automatic Curando Status manager -->
    <bean id="autoCurandoStatusManager" class="it.softsolutions.bestx.states.autocurando.AutoCurandoStatus" factory-method="valueOf">
    <constructor-arg>
      <value>INSTANCE</value>
    </constructor-arg>
        <property name="autoCurandoStatus"><value>ATTIVO</value></property>
  </bean>

  <!-- Ranking Loader manager -->
    <bean id="rankingLoaderManager" class="it.softsolutions.bestx.services.ranking.DefaultDealerRankingService">
        <property name="rankingLoaderDao"><ref bean="sqlRankingLoaderDao"></ref></property>
  </bean>

  <!-- APPLICATION CONTROL -->
    <bean id="applicationController" class="it.softsolutions.bestx.EngineControllerImpl" init-method="init">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
        <property name="mifidConfig"><ref bean="mifidConfig"></ref></property>
        <property name="regulatedMktIsinsLoader"><ref bean="regulatedMktIsinsLoader"></ref></property>
        <property name="databaseStatusDao"><ref bean="sqlDatabaseStatusDao"></ref></property>
        <property name="curandoTimerRetriever"><ref bean="curandoTimerRetriever"></ref></property>
    </bean>

  <!-- OPERATION RESTORE -->
    <bean id="operationRestore" class="it.softsolutions.bestx.SimpleOperationRestorer" init-method="init">
        <property name="initializer"><ref bean="operationPersistenceManager"></ref></property>
        <property name="operationRegistry"><ref bean="defaultOperationRegistry"></ref></property>
        <property name="operationFactory"><ref bean="defaultOperationFactory"></ref></property>
  </bean>

    <bean id="mifidConfig" class="it.softsolutions.bestx.MifidConfig" init-method="init">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"></ref></property>
  </bean>

    <bean id="curandoTimerRetriever" class="it.softsolutions.bestx.CurandoTimerRetriever" init-method="init">
        <property name="propertyFile"><value>BESTX.properties</value></property>
        <property name="timerPropertiesRoot"><value>TimerProfiles</value></property>
        <property name="currentProfileName"><value>StandardLimitFile</value></property>
    </bean>

  <!-- Hibernate DAOs -->
    <bean id="hibernateOutlawTickerFinder" class="it.softsolutions.bestx.finders.db.OutlawRTFITickerFinder" lazy-init="false" init-method="init">
        <property name="outlawTickerDao"><ref bean="hibernateOutlawTickerDao"></ref></property>
  </bean>
    <bean id="dbBasedHolidayFinder" class="it.softsolutions.bestx.finders.db.SetHolidayFinder" lazy-init="false" init-method="init">
        <property name="holidayDao"><ref bean="hibernateHolidayDao"></ref></property>
  </bean>
    <bean id="dbBasedExchangeRateFinder" class="it.softsolutions.bestx.finders.db.MapExchangeRateFinder" lazy-init="false" init-method="init">
        <property name="exchangeRateDao"><ref bean="hibernateExchangeRateDao"></ref></property>
  </bean>
    <bean id="dbBasedCustomerFinder" class="it.softsolutions.bestx.finders.db.MapCustomerFinder" init-method="init">
        <property name="customerDao"><ref bean="hibernateCustomerDao"></ref></property>
  </bean>
    <bean id="dbBasedCountryFinder" class="it.softsolutions.bestx.finders.db.MapCountryFinder" init-method="init">
        <property name="countryDao"><ref bean="hibernateCountryDao"></ref></property>
  </bean>
    <bean id="dbBasedInstrumentFinder" class="it.softsolutions.bestx.finders.db.DbInstrumentFinder" init-method="init">
        <property name="instrumentDao"><ref bean="hibernateInstrumentDao"></ref></property>
        <property name="instrumentParamDao"><ref bean="hibernateInstrumentParamDao"></ref></property>
  </bean>
    <bean id="dbBasedVenueFinder" class="it.softsolutions.bestx.finders.db.MapVenueFinder" init-method="init">
        <property name="venueDao"><ref bean="hibernateVenueDao"></ref></property>
  </bean>
    <bean id="dbBasedMarketMakerFinder" class="it.softsolutions.bestx.finders.db.MapMarketMakerFinder" init-method="init">
        <property name="marketMakerDao"><ref bean="hibernateMarketMakerDao"></ref></property>
  </bean>
    <bean id="dbBasedMarketFinder" class="it.softsolutions.bestx.finders.db.MapMarketFinder" init-method="init">
        <property name="marketDao"><ref bean="hibernateMarketDao"></ref></property>
	</bean>
    <bean id="dbCommissionFinder" class="it.softsolutions.bestx.finders.db.DbCommissionFinder" lazy-init="false" init-method="init">
        <property name="customerParamDao"><ref bean="hibernateCustomerParamDao"></ref></property>
        <property name="customerTickerDao"><ref bean="hibernateCustomerTickerDao"></ref></property>
	</bean>
    <bean id="regulatedMktIsinsLoader" class="it.softsolutions.bestx.RegulatedMktIsinsLoader" init-method="init">
        <property name="mktSecStatusDao"><ref bean="mktSecStatusDao"></ref></property>
		<property name="automaticCurandoMarketList">
			<list>
			</list>
		</property>
	</bean>
	<!-- Hibernate DAOs -->
    <bean id="hibernateExchangeRateDao" class="it.softsolutions.bestx.dao.hibernate.HibernateExchangeRateDao">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
	</bean>
    <bean id="hibernateCountryDao" class="it.softsolutions.bestx.dao.hibernate.HibernateCountryDao">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
	</bean>
    <bean id="hibernateInstrumentDao" class="it.softsolutions.bestx.dao.hibernate.HibernateInstrumentDao">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
	</bean>
	<bean id="hibernateVenueDao" class="it.softsolutions.bestx.dao.hibernate.HibernateVenueDao">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
	</bean>
    <bean id="hibernateMarketMakerDao" class="it.softsolutions.bestx.dao.hibernate.HibernateMarketMakerDao">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
	</bean>
	<bean id="hibernateMarketDao" class="it.softsolutions.bestx.dao.hibernate.HibernateMarketDao">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
	</bean>
    <bean id="hibernateCustomerDao" class="it.softsolutions.bestx.dao.hibernate.HibernateCustomerDao">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
        <property name="customerFilterFactory"><ref bean="defaultCustomerFilterFactory"/></property>
	</bean>
    <bean id="hibernateHolidayDao" class="it.softsolutions.bestx.dao.hibernate.HibernateHolidayDao">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
        <property name="allCountryCode"><value>${SettlementLimitControl.allCountries}</value></property>
	</bean>
    <bean id="hibernateOutlawTickerDao" class="it.softsolutions.bestx.dao.hibernate.HibernateOutlawTickerDAO">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
	</bean>
    <bean id="hibernateMarketSecurityStatusDao" class="it.softsolutions.bestx.dao.hibernate.HibernateMarketSecurityStatusDao">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
	</bean>
    <bean id="hibernateCustomerParamDao" class="it.softsolutions.bestx.dao.hibernate.HibernateCustomerParamDao" init-method="init">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
	</bean>
    <bean id="hibernateCustomerTickerDao" class="it.softsolutions.bestx.dao.hibernate.HibernateCustomerTickerDao" init-method="init">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
	</bean>
    <bean id="hibernateSettlementLimitDao" class="it.softsolutions.bestx.dao.hibernate.HibernateSettlementLimitDao">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
	</bean>
    <bean id="hibernateInstrumentParamDao" class="it.softsolutions.bestx.dao.hibernate.HibernateInstrumentParamDao">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
	</bean>

	<!-- SQL DAOs -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource"><ref bean="pooledDataSource"/></property>
	</bean>
	<bean id="nonCommittedJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource"><ref bean="nonCommittedPooledDataSource"/></property>
	</bean>
	<bean id="sqlSerialNumberDao" class="it.softsolutions.bestx.dao.sql.SqlSerialNumberDao">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
	</bean>
    <bean id="sqlTitoliIncrociabiliMultipliDao" class="it.softsolutions.bestx.dao.sql.SqlTitoliIncrociabiliMultipliDao">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
	</bean>
	
	<bean id="transMgr" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
                  <property name="dataSource"><ref bean="nonCommittedPooledDataSource"></ref></property> 
             </bean> 
    <bean id="sqlOperationStateAuditDao" class="it.softsolutions.bestx.dao.sql.SqlCSOperationStateAuditDao" init-method="init"> 
        <property name="jdbcTemplate"><ref bean="nonCommittedJdbcTemplate"/></property> 
        <property name="dataSourceTransactionManager"> 
             <ref bean="transMgr"></ref>
        </property> 
     </bean>  
    <bean id="dbBasedExcessDao" class="it.softsolutions.bestx.dao.sql.SqlExcessDao" init-method="init">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
	</bean>
	<bean id="mktSecStatusDao" class="it.softsolutions.bestx.dao.sql.SqlMarketSecurityIsinDao">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
	</bean>
	<bean id="sqlRankingLoaderDao" class="it.softsolutions.bestx.dao.sql.SqlRankingLoaderDao">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
        <constructor-arg><value>${Internal.MM.Codes}</value></constructor-arg>
	</bean>
	<bean id="sqlPriceForgeRuleDao" class="it.softsolutions.bestx.dao.sql.SqlPriceForgeRuleDAO">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
	</bean>
    <bean id="sqlInstrStatusNotifierDao" class="it.softsolutions.bestx.dao.sql.SqlInstrumentStatusNotifierDAO">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
	</bean>
	<bean id="sqlCustomerManagerDAO" class="it.softsolutions.bestx.dao.sql.SqlCustomerManagerDAO">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
	</bean>
    <bean id="sqlInstrumentZeroCommissionDao" class="it.softsolutions.bestx.dao.sql.DefaultInstrumentZeroCommissionDao">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"></ref></property>
	</bean>
	<bean id="fillManagerService" class="it.softsolutions.bestx.services.FillManagerService">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
	</bean>
	<bean id="sqlInstrumentDao" class="it.softsolutions.bestx.dao.sql.SqlInstrumentDao">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
	</bean>

	<bean id="sqlUserDao" class="it.softsolutions.bestx.dao.sql.SqlUserDao">
		<property name="jdbcTemplate">
			<ref bean="jdbcTemplate" />
		</property>
	</bean>
	<bean id="sqlBestXConfigurationDao" class="it.softsolutions.bestx.dao.sql.SqlBestXConfigurationDao">
		<property name="jdbcTemplate">
			<ref bean="jdbcTemplate" />
		</property>
	</bean>
    <bean id="sqlDatabaseStatusDao" class="it.softsolutions.bestx.dao.sql.SqlDatabaseStatusDao">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
    </bean>
	<!-- DATA SOURCES -->
	<bean id="pooledDataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName"><value>${hibernate.connection.driver_class}</value></property>
        <property name="url"><value>${hibernate.connection.url}</value></property>
        <property name="username"><value>${dbcp.connection.username}</value></property>
        <property name="password"><value>${dbcp.connection.password}</value></property>
        <property name="initialSize"><value>0</value></property>
        <property name="maxTotal"><value>100</value></property>
        <property name="maxIdle"><value>100</value></property>
        <property name="minIdle"><value>0</value></property>
		<property name="validationQuery"><value>select 1</value></property>
	</bean>

	<!-- DATA SOURCES -->
	<bean id="nonCommittedPooledDataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName"><value>${hibernate.connection.driver_class}</value></property>
        <property name="url"><value>${hibernate.connection.url}</value></property>
        <property name="username"><value>${dbcp.connection.username}</value></property>
        <property name="password"><value>${dbcp.connection.password}</value></property>
        <property name="initialSize"><value>0</value></property>
        <property name="maxTotal"><value>100</value></property>
        <property name="maxIdle"><value>100</value></property>
        <property name="minIdle"><value>0</value></property>
		<property name="validationQuery"><value>select 1</value></property>
		<property name="defaultAutoCommit"><value>false</value></property>
	</bean>

	<!-- SERVICES -->
    <bean id="settlementDateCalculator" class="it.softsolutions.bestx.services.financecalc.SettlementDateCalculator"></bean>
    <bean id="flyingRFQService" class="it.softsolutions.bestx.services.flyingrfqservice.MapFlyingRFQServer"></bean>
    <bean id="serialNumberService" class="it.softsolutions.bestx.services.serial.SerialNumberServer">
        <property name="serialNumberDao"><ref bean="sqlSerialNumberDao"></ref></property>
	</bean>
    <bean id="instrStatusNotifierBean" class="it.softsolutions.bestx.services.InstrumentStatusNotifierImpl" init-method="init">
        <property name="instrStatusNotifierDAO"><ref bean="sqlInstrStatusNotifierDao"></ref></property>
	</bean>
    <bean id="marketSecurityStatusService" class="it.softsolutions.bestx.services.marketsecuritystatus.MarketSecurityStatusServer" init-method="init">
		<property name="marketSecurityStatusDao" ref="hibernateMarketSecurityStatusDao" />
		<property name="marketFinder" ref="dbBasedMarketFinder" />
		<property name="instrStatusNotifier" ref="instrStatusNotifierBean" />
	</bean>
    <bean id="micCodeService" class="it.softsolutions.bestx.services.miccodeservice.MicCodeServer">
		<property name="marketSecurityStatusServer" ref="marketSecurityStatusService" />
	</bean>
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="pooledDataSource" />
		<property name="mappingResources">
			<list>
				<value>cs.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
                hibernate.connection.driver_class = ${hibernate.connection.driver_class}
                hibernate.connection.url = ${hibernate.connection.url}
				hibernate.dialect = ${hibernate.dialect}
                hibernate.cglib.use_reflection_optimizer = ${hibernate.cglib.use_reflection_optimizer}
                hibernate.cache.use_second_level_cache = ${hibernate.cache.use_second_level_cache}
                hibernate.cache.region.factory_class = ${hibernate.cache.region.factory_class}
                hibernate.show_sql = ${hibernate.show_sql}
				hibernate.format_sql = ${hibernate.format_sql}
				hibernate.use_sql_comments = ${hibernate.use_sql_comments}
				hibernate.generate_statistics = ${hibernate.generate_statistics}
                hibernate.cache.use_structured_entries = ${hibernate.cache.use_structured_entries}
			</value>
		</property>
	</bean>

    <bean id="commissionService" class="it.softsolutions.bestx.services.commissionservice.DbBasedCommissionService" lazy-init="false" init-method="init">
		<property name="baseCurrencyString" value="EUR" />
        <property name="exchangeRateFinder"><ref bean="dbBasedExchangeRateFinder"/></property>
        <property name="commissionFinder"><ref bean="dbCommissionFinder"/></property>
        <property name="instrumentZeroCommission"><ref bean="sqlInstrumentZeroCommissionDao"/></property>
	</bean>

    <bean id="defaultCustomerFilterFactory" class="it.softsolutions.bestx.services.ordervalidation.CustomerFilterFactoryImpl" lazy-init="false" init-method="init">
        <property name="exchangeRateDao"><ref bean="hibernateExchangeRateDao"></ref></property>
        <property name="mainCurrency"><value>"EUR"</value></property>
        <property name="retailMaxSize"><value>${Retail.max.size}</value></property>
        <property name="commissionService"><ref bean="commissionService"/></property>
        <property name="internalAuthThreshold"><value>${Internal_authorization.size}</value></property>
        <property name="portfolioListStr"><value>${InternalCustomers.PortfolioList}</value></property>
        <property name="regulatedMarketIsinsLoader"><ref bean="regulatedMktIsinsLoader"></ref></property>
	</bean>

	<!-- THREAD MANAGEMENT -->
    <bean id="threadPoolOMS1" class="it.softsolutions.bestx.ThreadPoolExecutor" init-method="initialize">
        <property name="corePoolSize" value="64"/>
		<property name="maxPoolSize" value="64"/>
		<property name="threadNamePrefix" value="ThreadPool-OMS1"/>
    </bean>
	<bean id="threadPoolNormalPriceService" class="it.softsolutions.bestx.ThreadPoolExecutor" init-method="initialize">
		<property name="corePoolSize" value="64"/>
		<property name="maxPoolSize" value="64"/>
		<property name="threadNamePrefix" value="ThreadPool-NormalPriceService"/>
    </bean>
	<bean id="threadPoolLimitFilePriceService" class="it.softsolutions.bestx.ThreadPoolExecutor" init-method="initialize">
		<property name="corePoolSize" value="64"/>
		<property name="maxPoolSize" value="64"/>
		<property name="threadNamePrefix" value="ThreadPool-LimitFilePriceService"/>
    </bean>
	<bean id="threadPoolPDOnlyPriceService" class="it.softsolutions.bestx.ThreadPoolExecutor" init-method="initialize">
		<property name="corePoolSize" value="64"/>
		<property name="maxPoolSize" value="64"/>
		<property name="threadNamePrefix" value="ThreadPool-PDOnlyPriceService"/>
    </bean>
	<bean id="threadPoolMQPriceDiscoveryAdapter" class="it.softsolutions.bestx.ThreadPoolExecutor" init-method="initialize">
		<property name="corePoolSize" value="64"/>
		<property name="maxPoolSize" value="100"/>
		<property name="threadNamePrefix" value="ThreadPool-MQPriceDiscoveryAdapter"/>
    </bean>
	<bean id="threadPoolBloomberg" class="it.softsolutions.bestx.ThreadPoolExecutor" init-method="initialize">
		<property name="corePoolSize" value="8"/>
		<property name="maxPoolSize" value="8"/>
		<property name="threadNamePrefix" value="ThreadPool-Bloomberg"/>
	</bean>
	<bean id="threadPoolTradeweb" class="it.softsolutions.bestx.ThreadPoolSortedQueueExecutor" init-method="initialize">
		<property name="corePoolSize" value="16"/>
		<property name="maxPoolSize" value="64"/>
		<property name="threadNamePrefix" value="ThreadPool-Tradeweb"/>
	</bean>	
	
	<bean id="threadPoolMarketAxess" class="it.softsolutions.bestx.ThreadPoolSortedQueueExecutor" init-method="initialize">
		<property name="corePoolSize" value="16"/>
		<property name="maxPoolSize" value="64"/>
		<property name="threadNamePrefix" value="ThreadPool-Tradeweb"/>
	</bean>	
		
    <bean id="oms1CustomerAdapter" class="it.softsolutions.bestx.connections.OMS1CustomerAdapter" init-method="init">
		<!-- BUSINESS PARAMETERS -->
		<property name="defaultCustomer">
			<bean class="it.softsolutions.bestx.model.Customer">
                <property name="fixId"><value>1994</value></property>
                <property name="name"><value>OTEX</value></property>
                <property name="enabled"><value>true</value></property>
                <property name="maxOrderSize"><value>500000</value></property>
				<property name="customerValidationRules">
					<list>
					</list>
				</property>
			</bean>
		</property>
		<!-- TECHNICAL PARAMETERS -->
        <property name="operationRegistry"><ref bean="defaultOperationRegistry"></ref></property>
        <property name="customerFinder"><ref bean="dbBasedCustomerFinder"></ref></property>
        <property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"></ref></property>
        <property name="executor"><ref bean="threadPoolOMS1"></ref></property>
		<property name="connectionHelper">
			<bean class="it.softsolutions.bestx.ConnectionHelper" />
		</property>
		<property name="fixGatewayConnection">
            <bean class="it.softsolutions.bestx.connections.fixgateway.FixGatewayConnector" init-method="init">
                <property name="serviceName"><value>Oms1FixGateway</value></property>
				<property name="xt2ConnectionProvider">
					<bean class="it.softsolutions.bestx.connections.xt2.XT2Adapter">
                        <constructor-arg><value>${XT2.Environment}</value></constructor-arg>
                        <constructor-arg><value>${XT2.Username}</value></constructor-arg>
                        <constructor-arg><value>${XT2.Password}</value></constructor-arg>
                        <constructor-arg><value>true</value></constructor-arg>
					</bean>
				</property>
                <property name="dateFormat"><value>yyyyMMdd</value></property>
                <property name="dateTimeFormat"><value>yyyyMMdd-HH:mm:ss.SSS</value></property>
				<property name="fixValidator">
                    <bean class="it.softsolutions.bestx.connections.fixgateway.FixValidator">
                        <property name="countryFinder"><ref bean="dbBasedCountryFinder"></ref></property>
                        <property name="exchangeRateFinder"><ref bean="dbBasedExchangeRateFinder"></ref></property>
                    </bean>
				</property>
                <property name="dumpMonitorStatisticsInterval"><value>${OrdersQueue.Dump.Interval.Milliseconds}</value></property>        
			</bean>
		</property>
        <property name="micCodeService"><ref bean="micCodeService"></ref></property>
        <property name="intervalTimeInSecs"><value>${Order.monitor.intervalInSeconds}</value></property>
        <property name="sqlInstrumentDao"><ref bean="sqlInstrumentDao"></ref></property>
        <property name="channelName"><value>OMS1</value></property>
	</bean>

    <bean id="oms2CustomerAdapter" class="it.softsolutions.bestx.connections.OMS2CustomerAdapter" init-method="init">
		<!-- BUSINESS PARAMETERS -->

		<!-- TECHNICAL PARAMETERS -->
        <property name="operationRegistry"><ref bean="defaultOperationRegistry"></ref></property>
        <property name="customerFinder"><ref bean="dbBasedCustomerFinder"></ref></property>
        <property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"></ref></property>
        <property name="executor"><ref bean="threadPoolOMS1"></ref></property>
		<property name="connectionHelper">
			<bean class="it.softsolutions.bestx.ConnectionHelper" />
		</property>
		<property name="fixGatewayConnection">
            <bean class="it.softsolutions.bestx.connections.amosgateway.OMS2GatewayConnector">
                <property name="serviceName"><value>Oms2FixGateway</value></property>
				<property name="xt2ConnectionProvider">
					<bean class="it.softsolutions.bestx.connections.xt2.XT2Adapter">
                        <constructor-arg><value>${XT2.Environment}</value></constructor-arg>
                        <constructor-arg><value>${XT2.Username}</value></constructor-arg>
                        <constructor-arg><value>${XT2.Password}</value></constructor-arg>
                        <constructor-arg><value>true</value></constructor-arg>
					</bean>
				</property>
                <property name="dateFormat"><value>yyyyMMdd</value></property>
                <property name="dateTimeFormat"><value>yyyyMMdd-HH:mm:ss.SSS</value></property>
				<property name="privateClientId" value="0800" />
			</bean>
		</property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"></ref></property>
        <property name="micCodeService"><ref bean="micCodeService"></ref></property>
        <property name="intervalTimeInSecs"><value>${Order.monitor.intervalInSeconds}</value></property>
        <property name="sqlInstrumentDao"><ref bean="sqlInstrumentDao"></ref></property>
        <property name="channelName"><value>OMS2</value></property>
	</bean>

	<!-- Helper class used to hide different customer adapters from the operation -->
    <bean id="customerAdapterHelper" class="it.softsolutions.bestx.connections.CustomerAdapterHelper" init-method="init">
		<property name="adaptersMap">
			<map>
				<entry key="${Client.FIX.Session}" value-ref="oms1CustomerAdapter" />
				<entry key="FIX.4.2:SOFT1->OMS1" value-ref="oms1CustomerAdapter" />
				<entry key="FIX.4.1:SOFT2->OMS2" value-ref="oms2CustomerAdapter" />
				<entry key="FIX.4.2:SOFT1->CSZURTest" value-ref="oms1CustomerAdapter" />
				<entry key="FIX.4.2:SOFT1->CSZURProd" value-ref="oms1CustomerAdapter" />
			</map>
		</property>
	</bean>
    <bean id="defaultOperationRegistry" class="it.softsolutions.bestx.CachedOperationRegistry" init-method="init">
        <property name="operationFactory"><ref bean="defaultOperationFactory"></ref></property>
        <property name="operationPersistenceManager"><ref bean="operationPersistenceManager"></ref></property>
	</bean>

	<!-- FACTORIES & REGISTRIES -->
    <bean id="defaultOperationFactory" class="it.softsolutions.bestx.Operation$DefaultOperationFactory">
        <property name="defaultStrategy"><ref bean="csStrategy"></ref></property>
        <property name="initialStateClassName"><value>it.softsolutions.bestx.states.InitialState</value></property>
		<property name="operationStateListeners">
			<list>
				<ref bean="operationPersistenceManager"></ref>
				<ref bean="operationStateAudit"></ref>
				<ref bean="statisticsOnOperationStateChange"></ref>
				<ref bean="operationLifecycleManager"></ref>
			</list>
		</property>
        <property name="marketExecutionListener"><ref bean="operationStateAudit"></ref></property>
	</bean>

	<!-- Stefano 20080807 - Nuova gestione matching -->
    <bean id="titoliIncrociabiliServer" class="it.softsolutions.bestx.services.titoliincrociabili.TitoliIncrociabiliServer">
		<property name="titoliIncrociabiliDao">
			<ref bean="sqlTitoliIncrociabiliMultipliDao" />
		</property>
	</bean>

    <!-- Global Bean containing the list of the policies that allow customers to operate on regulated markets.
            Used for the automatic curando  -->
	<bean id="regulatedMarketPoliciesBean" class="java.util.ArrayList">
		<constructor-arg>
			<list>
				<value>StandardN</value>
				<!--<value>standardMR</value> mercati regolamentati -->
                <!-- 
                <value>Another policy</value>
                <value>Another policy</value>
                 -->
			</list>
		</constructor-arg>
	</bean>

	<!-- STRATEGY -->
	<bean id="csStrategy" class="it.softsolutions.bestx.CSStrategy">
		<!-- BUSINESS PARAMETERS -->
        <property name="marketCommunicationTimeout"><value>50000</value></property>
        <property name="customerConnection"><ref bean="customerAdapterHelper"></ref></property>
        <property name="operatorConsoleConnection"><ref bean="ib4jOperatorConsoleAdapter"></ref></property>
        <property name="bbgWaitFillMSec"><value>15000</value></property>
        <property name="bbgFillPollingMSec"><value>2000</value></property>
        <property name="manualWaitFillMSec"><value>15000</value></property>
        <property name="manualFillPollingMSec"><value>2000</value></property>
        <property name="waitPriceTimeoutMSec"><value>${Price.state.timeout}</value></property>
        <property name="curandoRetryTimeout"><value>${Order.Curando.Timeout}</value></property>
        <property name="sendExecRepTimeout"><value>${Send.execRep.timeout}</value></property>       
        <property name="internalMMcodes"><value>${Internal.MM.Codes}</value></property>
        <property name="marketPriceTimeout"><value>${Bloomberg.pricesTimeout}</value></property>
        <property name="marketExecTimeout"><value>${Market.state.timeout}</value></property>
		<property name="marketAxessExecTimeout"><value>${MarketAxess.ExecTimeout}</value></property>
        <property name="internalRfqReplyTimeout"><value>${Internal.rfqreply.timeout}</value></property>
        <property name="internalRfqMessagePrefix"><value>${Internal.rfq.message.prefix}</value></property>
		<!-- TECHNICAL PARAMETERS -->
        <property name="mifidConfig"><ref bean="mifidConfig"></ref></property>
        <property name="priceServiceProvider"><ref bean="priceServiceProvider"></ref></property>
        <property name="serialNumberService"><ref bean="serialNumberService"></ref></property>
        <property name="orderValidationService"><ref bean="csOrderValidationService"></ref></property>
        <property name="priceDiscoveryValidationService"><ref bean="csPDValidationService"></ref></property>
<!--         <property name="titoliIncrociabiliService"><ref bean="titoliIncrociabiliServer"></ref></property>  -->
        <property name="marketConnectionRegistry"><ref bean="configurableMarketConnectionRegistry"></ref></property>
        <property name="marketSecurityStatusService"><ref bean="marketSecurityStatusService"></ref></property>
		<property name="customerFinder" ref="dbBasedCustomerFinder" />
		<property name="marketFinder" ref="dbBasedMarketFinder" />
        <property name="commissionService"><ref bean="commissionService"/></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"/></property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"></ref></property>
        <property name="regulatedMktIsinsLoader"><ref bean="regulatedMktIsinsLoader"></ref></property>
        <property name="autoCurandoStatus"><ref bean="autoCurandoStatusManager"></ref></property>
        <property name="regulatedMarketPolicies"><ref bean="regulatedMarketPoliciesBean"></ref></property>
        <property name="operationRegistry"><ref bean="defaultOperationRegistry"></ref></property>
		<property name="instrStatusNotifier" ref="instrStatusNotifierBean" />
		<!-- Reject orders when Bloomberg is Best : set to false to deactivate -->
        <property name="rejectWhenBloombergIsBest"><value>${Bloomberg.rejectWhenIsBest}</value></property>
        <!-- Reject orders when book depth is < (x) : set to 0 to deactivate, default = 3 -->
        <property name="minimumRequiredBookDepth"><value>${Execution.minimumRequiredBookDepth}</value></property>
		<!-- in milliseconds -->
        <property name="waitingCMFTimeout"><value>100000</value></property>
        <property name="grdLiteLoadResponseTimeout"><value>${GRDLite.loadResponse.timeout}</value></property>
		<property name="grdLiteService" ref="grdLiteService" />
		<property name="instrumentFinder" ref="dbBasedInstrumentFinder" />
        <property name="limitFileBestWithinLimitThresholdPDIntervalInSeconds"><value>${LimitFileBestWithinLimitThresholdPDIntervalInSeconds}</value></property>
        <property name="limitFileBestOutsideLimitThresholdPDIntervalInSeconds"><value>${LimitFileBestOutsideLimitThresholdPDIntervalInSeconds}</value></property>
        <property name="limitFilePdTimes"><value>${LimitFileNoPricePDTimes}</value></property>
        <property name="limitFileCommentPrefix"><value>${LimitFileCommentPrefix}</value></property>
        <property name="limitFileNoPriceCommentPrefix"><value>${LimitFileNoPriceCommentPrefix}</value></property>
        <property name="limitFileCommentMaxLen"><value>${LimitFileCommentMaxLen}</value></property>
        <property name="operationStateAuditDao"><ref bean="sqlOperationStateAuditDao"></ref></property>
        <property name="tsoxTechnicalRejectReasons"><value>${Bloomberg.Tsox.technical_reject_reasons}</value></property>
        <property name="orderCancelDelay"><value>${orderCancel.timeout}</value></property>
        <property name="bestXConfigurationDao"><ref bean="sqlBestXConfigurationDao"></ref></property>
        <property name="priceDiscoveryConnection"><ref bean="mqPriceDiscoveryOperatorConsoleAdapter"></ref></property>
        <property name="priceDiscoveryCustomerId"><value>${PriceDiscovery.Customer}</value></property>
        <property name="bookDepth"><value>${PriceDiscovery.BookDepth}</value></property>
        <property name="orderBookDepth"><value>${PriceDiscovery.OrderBookDepth}</value></property>
        <property name="priceDiscoveryTimeout"><value>${PriceDiscovery.Timeout}</value></property>
        <property name="priceDecimals"><value>${PriceDiscovery.PriceDecimals}</value></property>
        <property name="pobExMaxSize"><value>${Marketaxess.MaxPOBEXEntries}</value></property>
        <property name="curandoTimerRetriever"><ref bean="curandoTimerRetriever"></ref></property>
        <property name="targetPriceMaxLevel"><value>${TargetPrice.MaxLevel}</value></property>
	<property name="applicationStatus" ref="applicationStatus" />
	</bean>
	
	<!-- The application status contains global status used by the application -->
	<bean id="applicationStatus" class="it.softsolutions.bestx.appstatus.ApplicationStatus">
		<property name="type" value="${ApplicationStatus.Type:EXECUTION}" />
	</bean>
	
	<bean id="applicationStatusController" class="it.softsolutions.bestx.appstatus.ApplicationStatusController">
		<property name="applicationStatus" ref="applicationStatus" />
	</bean>

	<!-- VALIDATION FOR ORDERS -->
    <bean id="csOrderValidationService" class="it.softsolutions.bestx.services.CSOrderValidationService">
		<property name="formalValidatorList">
			<list>
		        <bean class="it.softsolutions.bestx.services.ordervalidation.MaxActiveOrdersFilter">
                    <property name="orderThreshold"><value>2000</value></property>
                	<property name="activeOrdersDao">
                		<bean class="it.softsolutions.bestx.services.OrderCounter">
        				<property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
		                </bean>
	                </property>
                </bean>
                <bean class="it.softsolutions.bestx.services.ordervalidation.FormalInstrumentFilter">
                    <property name="grdLiteService"><ref bean="grdLiteService"></ref></property>
                    <property name="rejectWhenBloombergIsBest"><value>${Bloomberg.rejectWhenIsBest}</value></property>
				</bean>
				<!-- <bean class="it.softsolutions.bestx.services.ordervalidation.AlreadyExistingOrderControl"> -->
				<!-- <property name="operationStateAuditDao"><ref bean="sqlOperationStateAuditDao"/></property> -->
				<!-- </bean> -->
                <bean class="it.softsolutions.bestx.services.ordervalidation.FormalCurrencyFilter"/>
                <bean class="it.softsolutions.bestx.services.ordervalidation.FormalCustomer"/>
				<!-- [RR20120601] The following validator replaces the old FormalFutSettDateFilter -->
                <bean class="it.softsolutions.bestx.services.ordervalidation.FormalFutSettDateFilterUsingCalendars">
                    <property name="holidayFinder"><ref bean="dbBasedHolidayFinder"/></property>
                    <property name="settlementDateCalculator"><ref bean="settlementDateCalculator"/></property>
                </bean>
                <bean class="it.softsolutions.bestx.services.ordervalidation.FormalOrderTypeFilter"/>
                <bean class="it.softsolutions.bestx.services.ordervalidation.FormalPriceFilter"/>
                <bean class="it.softsolutions.bestx.services.ordervalidation.FormalQtyFilter"/>
                <bean class="it.softsolutions.bestx.services.ordervalidation.FormalSettlementTypeFilter"/>
                <bean class="it.softsolutions.bestx.services.ordervalidation.FormalSideFilter"/>
                <bean class="it.softsolutions.bestx.services.ordervalidation.FormalTimeInForceFilter"/>
                <bean class="it.softsolutions.bestx.services.ordervalidation.PastSettlementControl"/>
                <!-- <bean class="it.softsolutions.bestx.services.ordervalidation.FormalCountryFilter">
                    <property name="countryFinder"><ref bean="dbBasedCountryFinder"/></property>
                </bean> --> <!-- commented out as agreed with Deepthi on Gen 30th 2014 -->
                <bean class="it.softsolutions.bestx.services.ordervalidation.ExchangeRateControl">
                    <property name="finder"><ref bean="dbBasedExchangeRateFinder"/></property>
	                <property name="mainCurrency"><value>"EUR"</value></property>
				</bean>
                <bean class="it.softsolutions.bestx.services.ordervalidation.FormalTimeInForceValidator"/>
			</list>
		</property>
		<property name="businessValidatorList">
			<list>
				<!-- ExistInstrumentControl must be the first -->
                <bean class="it.softsolutions.bestx.services.ordervalidation.ExistInstrumentControl"/>
                <bean class="it.softsolutions.bestx.services.ordervalidation.CurrencyControl"/>
				<!--<bean class="it.softsolutions.bestx.services.ordervalidation.CustomerCurrencyValidator"/> -->
                <bean class="it.softsolutions.bestx.services.ordervalidation.HolidaySettlementControl">
                    <property name="holidayFinder"><ref bean="dbBasedHolidayFinder"/></property>
                </bean>
                <bean class="it.softsolutions.bestx.services.ordervalidation.IncQuantityControl"/>
                <bean class="it.softsolutions.bestx.services.ordervalidation.MinQuantityControl"/>
                <bean class="it.softsolutions.bestx.services.ordervalidation.SettlementDateLimitControl">
                    <property name="settlementLimitDao"><ref bean="hibernateSettlementLimitDao"/></property>
                    <property name="settlementHolidayFinder"><ref bean="dbBasedHolidayFinder"/></property>
                    <property name="settlementDateCalculator"><ref bean="settlementDateCalculator"/></property>
                    <property name="allCountryCode"><value>${SettlementLimitControl.allCountries}</value></property>
                    <property name="allCurrencyCode"><value>${SettlementLimitControl.allCurrencies}</value></property>
				</bean>
                <bean class="it.softsolutions.bestx.services.ordervalidation.LimitFileParkTagFilter">
					<property name="custOrderHandlingInstrValue"><value>TMO</value></property>
				</bean>
               <bean class="it.softsolutions.bestx.services.ordervalidation.StopAutoExecHandlInst">
				</bean>               
			</list>
		</property>
		<property name="punctualValidatorList">
			<!-- For rejectable orders -->
			<list>
                <bean class="it.softsolutions.bestx.services.ordervalidation.TotalExcessDynamicFilter">
					<property name="excessDao" ref="dbBasedExcessDao" />
					<property name="exchangeRateFinder" ref="dbBasedExchangeRateFinder" />
				</bean>
			</list>
		</property>
	</bean>


	<!-- VALIDATION FOR Price discovery requests -->
    <bean id="csPDValidationService" class="it.softsolutions.bestx.services.CSOrderValidationService">
		<property name="formalValidatorList">
			<list>
                <bean class="it.softsolutions.bestx.services.ordervalidation.FormalCustomer"/>
                <bean class="it.softsolutions.bestx.services.ordervalidation.FormalSideFilter"/>
			</list>
		</property>
		<property name="businessValidatorList">
			<list>
				<!-- ExistInstrumentControl must be the first -->
                <bean class="it.softsolutions.bestx.services.ordervalidation.ExistInstrumentControl"/>
                <bean class="it.softsolutions.bestx.services.ordervalidation.IncQuantityControl"/>
                <bean class="it.softsolutions.bestx.services.ordervalidation.MinQuantityControl"/>
			</list>
		</property>
		<!-- useless for PD -->
		<property name="punctualValidatorList">
			<list>
			</list>
		</property>
	</bean>

	<!-- REGISTRY FOR CONNECTORS -->
	<bean id="connectionRegistry" class="it.softsolutions.bestx.connections.CSConnectionRegistry">
        <property name="customerConnection"><ref bean="oms1CustomerAdapter"/></property>
        <property name="mqPriceDiscoveryConnection"><ref bean="mqPriceDiscoveryOperatorConsoleAdapter"/></property>
        <property name="grdLiteConnection"><ref bean="grdLiteService"/></property>
	</bean>

	<!-- OPERATION LIFECYCLE MANAGER -->
	<bean id="operationLifecycleManager" class="it.softsolutions.bestx.OperationLifecycleManager">
        <property name="operationRegistry"><ref bean="defaultOperationRegistry"></ref></property>
	</bean>

	<!-- OPERATION PERSISTENCE MANAGER -->
    <bean id="operationPersistenceManager" class="it.softsolutions.bestx.OperationPersistenceManager" init-method="init">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
        <property name="operationFactory"><ref bean="defaultOperationFactory"></ref></property>
        <property name="keepTerminalOperation"><value>true</value></property>
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"/></property>
	</bean>

	<bean id="operationStateAudit" class="it.softsolutions.bestx.audit.CSOperationStateAudit">
        <property name="operationStateAuditDao"><ref bean="sqlOperationStateAuditDao"></ref></property>
        <property name="mifidConfig"><ref bean="mifidConfig"></ref></property>
        <property name="marketConnectionRegistry"><ref bean="configurableMarketConnectionRegistry"/></property>
		<property name="marketFinder" ref="dbBasedMarketFinder" />
		<property name="customerFinder" ref="dbBasedCustomerFinder" />
		<property name="regulatedMktIsinsLoader" ref="regulatedMktIsinsLoader" />
        <property name="regulatedMarketPolicies"><ref bean="regulatedMarketPoliciesBean"></ref></property>
        <property name="internalMMcodes"><value>${Internal.MM.Codes}</value></property>
        <property name="settlementDateCalculator"><ref bean="settlementDateCalculator"/></property>
	</bean>

	<!-- OPERATION STATUS NOTIFIERS -->
    <bean id="operatorConsoleNotifier" class="it.softsolutions.bestx.SimpleOperatorConsoleNotifier" init-method="init">
        <property name="operatorConsoleConnection"><ref bean="ib4jOperatorConsoleAdapter"/></property>
	</bean>
    <bean id="operationDumpNotifier" class="it.softsolutions.bestx.OperationDumpNotifier" init-method="init">
        <property name="operatorConsoleConnection"><ref bean="ib4jOperatorConsoleAdapter"/></property>
	</bean>

	<!-- PRICE SERVICE -->

    <bean id="normalPriceService" class="it.softsolutions.bestx.services.CSPriceService" init-method="init">
        <property name="priceServiceName"><value>NormalPriceService</value></property>
        <property name="ordersPerMinute"><value>30</value></property>
        <property name="executor"><ref bean="threadPoolNormalPriceService"></ref></property>
        <property name="marketConnectionRegistry"><ref bean="configurableMarketConnectionRegistry"/></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"/></property>
        <property name="timePriceDiscoveryNotifyThreshold"><value>${Price.monitor.notify.timeThreshold}</value></property>
        <property name="intervalAvgTimeInSecs"><value>${Price.monitor.interval}</value></property>
		<property name="marketCodes">
			<list>
				<value>BLOOMBERG</value>
				<value>TW</value>
				<value>MARKETAXESS</value>
			</list>
		</property>
		<property name="bookClassifier">
			<ref bean="bookClassifierBean" />
		</property>
		<property name="bookSorter">
			<bean class="it.softsolutions.bestx.services.booksorter.BookSorterImpl">
			</bean>
		</property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"></ref></property>
        <property name="bookProposalBuilder"><ref bean="defaultBookProposalBuilder"></ref></property>
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"></ref></property>
        <property name="serialNumberService"><ref bean="serialNumberService"></ref></property>
		<!-- Reject orders when Bloomberg is Best : set to false to deactivate -->
        <property name="rejectWhenBloombergIsBest"><value>${Bloomberg.rejectWhenIsBest}</value></property>
        <property name="operationStateAuditDao"><ref bean="sqlOperationStateAuditDao"></ref></property>
	</bean>

    <bean id="limitFilePriceService" class="it.softsolutions.bestx.services.CSPriceService" init-method="init">
        <property name="priceServiceName"><value>LimitFilePriceService</value></property>
        <property name="ordersPerMinute"><value>200</value></property>
        <property name="executor"><ref bean="threadPoolLimitFilePriceService"></ref></property>
        <property name="marketConnectionRegistry"><ref bean="configurableMarketConnectionRegistry"/></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"/></property>
        <property name="timePriceDiscoveryNotifyThreshold"><value>${Price.monitor.notify.timeThreshold}</value></property>
        <property name="intervalAvgTimeInSecs"><value>${Price.monitor.interval}</value></property>
		<property name="marketCodes">
			<list>
				<value>BLOOMBERG</value>
				<value>TW</value>
				<value>MARKETAXESS</value>
			</list>
		</property>
		<property name="bookClassifier">
			<ref bean="bookClassifierBean" />
		</property>
		<property name="bookSorter">
			<bean class="it.softsolutions.bestx.services.booksorter.BookSorterImpl">
			</bean>
		</property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"></ref></property>
        <property name="bookProposalBuilder"><ref bean="defaultBookProposalBuilder"></ref></property>
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"></ref></property>
        <property name="serialNumberService"><ref bean="serialNumberService"></ref></property>
		<!-- Reject orders when Bloomberg is Best : set to false to deactivate -->
        <property name="rejectWhenBloombergIsBest"><value>${Bloomberg.rejectWhenIsBest}</value></property>
        <property name="operationStateAuditDao"><ref bean="sqlOperationStateAuditDao"></ref></property>        
	</bean>

    <bean id="pDOnlyPriceService" class="it.softsolutions.bestx.services.CSPriceService" init-method="init">
        <property name="priceServiceName"><value>PDOnlyPriceService</value></property>
        <property name="ordersPerMinute"><value>60000</value></property>
        <property name="executor"><ref bean="threadPoolPDOnlyPriceService"></ref></property>
        <property name="marketConnectionRegistry"><ref bean="configurableMarketConnectionRegistry"/></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"/></property>
        <property name="timePriceDiscoveryNotifyThreshold"><value>${Price.monitor.notify.timeThreshold}</value></property>
        <property name="intervalAvgTimeInSecs"><value>${Price.monitor.interval}</value></property>
		<property name="marketCodes">
			<list>
				<value>BLOOMBERG</value>
				<value>TW</value>
				<value>MARKETAXESS</value>
			</list>
		</property>
		<property name="bookClassifier">
			<ref bean="pDOnlyBookClassifierBean" />
		</property>
		<property name="bookSorter">
			<bean class="it.softsolutions.bestx.services.booksorter.BookSorterImpl">
			</bean>
		</property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"></ref></property>
        <property name="bookProposalBuilder"><ref bean="defaultBookProposalBuilder"></ref></property>
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"></ref></property>
        <property name="serialNumberService"><ref bean="serialNumberService"></ref></property>
		<!-- Reject orders when Bloomberg is Best : set to false to deactivate -->
        <property name="rejectWhenBloombergIsBest"><value>${Bloomberg.rejectWhenIsBest}</value></property>
        <property name="operationStateAuditDao"><ref bean="sqlOperationStateAuditDao"></ref></property>
	</bean>

	<bean id="bookClassifierBean" class="it.softsolutions.bestx.ConfigurableBookClassifier">
		<property name="proposalClassifierList">
			<list>
				<bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardSpreadProposalClassifier"></bean>
				<bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardYieldProposalClassifier"></bean>
                <bean class="it.softsolutions.bestx.services.proposalclassifiers.SubstituteCounterProposalClassifier"></bean>
                <bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardUnavailableVenueProposalClassifier"></bean>
                <bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardZeroProposalClassifier">
                	<property name="marketMakerCompositeCodes"><value>${MarketMakers.compositeCodes}</value></property>
                </bean>
                <bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardOldProposalClassifier">
                    <property name="configValue"><value>12</value></property>
                    <property name="marketMakerCompositeCodes"><value>${MarketMakers.compositeCodes}</value></property>
				</bean>
				<!--
                <bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardInsufficientQuantityProposalClassifier"></bean>
                -->
                <bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardInadequateOrderedQuantityProposalClassifier">
                    <property name="marketSecurityStatusService"><ref bean="marketSecurityStatusService"></ref></property>
                    <property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"/></property>
				</bean>

                <bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardMarketTriedInEarlierAttemptProposalClassifier"></bean>
                <bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardWorstPriceProposalClassifier">
                    <property name="titoliIncrociabiliService"><ref bean="titoliIncrociabiliServer"></ref></property>
                    <!--  Flag per abilitare o disabilitare il controllo che un ordine sia o meno un matching tramite query -->
                    <property name="matchByQueryEnabled"><value>false</value></property>
				</bean>
			</list>
		</property>
		<property name="bookClassifierList">
			<list>
                <bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardDuplicatedMM"></bean>
			</list>
		</property>
	</bean>
	
	<bean id="pDOnlyBookClassifierBean" class="it.softsolutions.bestx.ConfigurableBookClassifier">
		<property name="proposalClassifierList">
			<list>
				<bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardSpreadProposalClassifier"></bean>
				<bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardYieldProposalClassifier"></bean>
                <bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardUnavailableVenueProposalClassifier"></bean>
                <bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardZeroProposalClassifier">
                	<property name="marketMakerCompositeCodes"><value>${MarketMakers.compositeCodes}</value></property>
                </bean>
                <bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardOldProposalClassifier">
                    <property name="configValue"><value>12</value></property>
                    <property name="marketMakerCompositeCodes"><value>${MarketMakers.compositeCodes}</value></property>
				</bean>
                <bean class="it.softsolutions.bestx.services.proposalclassifiers.TagInsufficientQtyProposalClassifier">
                	<property name="marketMakerCompositeCodes"><value>${MarketMakers.compositeCodes}</value></property>
                </bean>
			</list>
		</property>
		<property name="bookClassifierList">
			<list>
                <bean class="it.softsolutions.bestx.services.proposalclassifiers.DiscardDuplicatedMM"></bean>
			</list>
		</property>
	</bean>


<!-- Execution strategy -->
    <bean id="executionStrategyServiceFactory" class="it.softsolutions.bestx.services.executionstrategy.CSExecutionStrategyServiceFactory">
        <property name="bookClassifier"><ref bean="bookClassifierBean"/></property>
 		<property name="bookSorter"><bean class="it.softsolutions.bestx.services.booksorter.BookSorterImpl"></bean></property>
    	<property name="allMarketsToTry">
    		<list>
				<value>TW</value>
				<value>MARKETAXESS</value>
				<value>BLOOMBERG</value>
    		</list>
    	</property>
    	<property name="applicationStatus" ref="applicationStatus" />
    	<property name="minimumRequiredBookDepth"><value>${Execution.minimumRequiredBookDepth}</value></property>
    </bean>


	<!-- MARKET REGISTRY -->
    <bean id="configurableMarketConnectionRegistry" class="it.softsolutions.bestx.markets.ConfigurableMarketConnectionRegistry" init-method="init">
		<property name="marketConnectionList">
			<list>
				<ref bean="bloombergMarket" />
				<ref bean="tradewebMarket" />
				<ref bean="marketAxessMarket" />
			</list>
		</property>
	</bean>


    <bean id="bloombergMarket" class="it.softsolutions.bestx.markets.bloomberg.BloombergMarket" init-method="init" lazy-init="true">
        <property name="executor"><ref bean="threadPoolBloomberg"/></property>
        <property name="proposalDiscarders">
            <list>
            </list> 
        </property>
        <property name="operationRegistry"><ref bean="defaultOperationRegistry"></ref></property>
        <property name="serialNumberService"><ref bean="serialNumberService"></ref></property>
        <property name="symbioticConnectionListeners">
            <list>
            </list>
        </property>
        <property name="orderRespThresholdSeconds"><value>${Order.monitor.notify.timeThresholdInSeconds}</value></property>
        <property name="orderRespIntervalTimeInSecs"><value>${Order.monitor.intervalInSeconds}</value></property>
        <property name="pricesRespThresholdSeconds"><value>${Price.monitor.notify.timeThresholdInSeconds}</value></property>
        <property name="pricesRespIntervalTimeInSecs"><value>${Price.monitor.intervalInSeconds}</value></property>
        <property name="executionsRespIntervalTimeInSecs"><value>${Execution.monitor.intervalInSeconds}</value></property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"/></property>
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"/></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"/></property>
        <property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"/></property>
        <property name="tradeStacPreTradeConnection"><ref bean="simulatedBlpConnector"/></property>
        <property name="tsoxConnection"><ref bean="tsoxConnector"/></property>
    </bean>
	
     <bean id="tsoxConnector" class="it.softsolutions.bestx.connections.bloomberg.tsox.simulated.BogusTSOXConnection" init-method="init">
        <property name="tsoxConnectionListener"><ref bean="bloombergMarket"/></property>
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"/></property>
        <property name="cancelIsins">
        	<list>
        	</list>
		</property>
        <property name="rejectIsins">
        	<list>
        	</list>
		</property>
	</bean>
 
<!--
    <bean id="blpConnector" class="it.softsolutions.bestx.connections.bloomberg.blp.BLPConnector" init-method="init">
        <property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"/></property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"/></property>
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"/></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"/></property>
        <property name="tradeStacPreTradeConnectionListener"><ref bean="bloombergMarket"/></property>
        <property name="tradeStacClientSession">
            <bean class="it.softsolutions.tradestac.client.TradeStacClient"></bean>
        </property>
        <property name="fixConfigFileName"><value>fix-tradestac-blp.properties</value></property>
    </bean>
-->

  <!--  
    <bean id="simulatedBlpConnector" class="it.softsolutions.bestx.connections.tradestac.TradeStacMarketSimulatorConnectionImpl" init-method="init">
        <property name="marketCode"><value>BLOOMBERG</value></property>
        <property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"/></property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"/></property>
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"/></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"/></property>
        <property name="tradeStacPreTradeConnectionListener"><ref bean="bloombergMarket"/></property>
        <property name="tradeStacConnectionListener"><ref bean="bloombergMarket"/></property>
		<property name="connectionName"><value>UNIVERSAL-MARKET-SESSION</value></property>
        <property name="tradeStacClientSession">
            <bean class="it.softsolutions.tradestac.client.TradeStacClient"></bean>
        </property>
        <property name="fixConfigFileName"><value>fix-tradestac-simulated-blp.properties</value></property>
    </bean>
 -->

	<!-- ====================================================================== -->
    <!-- ==== Tradeweb ======================================================== -->
    <!-- ====================================================================== -->
    <bean id="tradewebMarket" class="it.softsolutions.bestx.markets.tradeweb.TradewebMarket" init-method="init" lazy-init="true">
		<property name="executor"><ref bean="threadPoolTradeweb" /></property>
		<property name="proposalDiscarders">
			<list>
			</list>
		</property>
        <property name="operationRegistry"><ref bean="defaultOperationRegistry"></ref></property>
        <property name="serialNumberService"><ref bean="serialNumberService"></ref></property>
		<property name="symbioticConnectionListeners">
			<list>
			</list>
		</property>
		<property name="miFIDRestricted"><value>true</value></property>
        <property name="orderRespThresholdSeconds"><value>${Order.monitor.notify.timeThresholdInSeconds}</value></property>
        <property name="orderRespIntervalTimeInSecs"><value>${Order.monitor.intervalInSeconds}</value></property>
        <property name="pricesRespThresholdSeconds"><value>${Price.monitor.notify.timeThresholdInSeconds}</value></property>
        <property name="pricesRespIntervalTimeInSecs"><value>${Price.monitor.intervalInSeconds}</value></property>
        <property name="executionsRespIntervalTimeInSecs"><value>${Execution.monitor.intervalInSeconds}</value></property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"/></property>
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"/></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"/></property>
        <property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"/></property>
        <!-- <property name="tradeStacPreTradeConnection"><ref bean="simulatedMdsConnector"/></property> -->
        <property name="tradeStacPreTradeConnection"><ref bean="mdsConnector"/></property>
        <property name="tradeXpressConnection"><ref bean="tradexpressConnector"/></property>
	</bean>

    <bean id="mdsConnector" class="it.softsolutions.bestx.connections.tradeweb.mds.MDSConnectionImpl" init-method="init">
        <property name="executor"><ref bean="threadPoolTradeweb"/></property>
        <property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"/></property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"/></property>
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"/></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"/></property>
        <property name="tradeStacConnectionListener"><ref bean="tradewebMarket"/></property>
        <property name="tradeStacPreTradeConnectionListener"><ref bean="tradewebMarket"/></property>
		<property name="tradeStacClientSession">
			<bean class="it.softsolutions.tradestac.client.TradeStacClient"></bean>
		</property>
        <property name="fixConfigFileName"><value>fix-tradestac-mds.properties</value></property>
	</bean>
 
 <!--    <bean id="simulatedMdsConnector" class="it.softsolutions.bestx.connections.tradestac.TradeStacMarketSimulatorConnectionImpl" init-method="init">
        <property name="marketCode"><value>TW</value></property>
        <property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"/></property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"/></property>
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"/></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"/></property>
        <property name="tradeStacPreTradeConnectionListener"><ref bean="tradewebMarket"/></property>
        <property name="tradeStacConnectionListener"><ref bean="tradewebMarket"/></property>
		<property name="connectionName"><value>UNIVERSAL-MARKET-SESSION</value></property>
        <property name="tradeStacClientSession">
            <bean class="it.softsolutions.tradestac.client.TradeStacClient"></bean>
        </property>
        <property name="fixConfigFileName"><value>fix-tradestac-simulated-mds.properties</value></property>
    </bean>
-->
    <bean id="tradexpressConnector" class="it.softsolutions.bestx.connections.tradeweb.tradexpress.TradeXpressConnectionImpl" init-method="init">
		<property name="tradeXpressConnectionListener"><ref bean="tradewebMarket"/></property>
		<property name="tradeStacConnectionListener"><ref bean="tradewebMarket"/></property>
		<property name="tradeStacClientSession">
			<bean class="it.softsolutions.tradestac.client.TradeStacClient"></bean>
		</property>
		<property name="traderCode"><value>${Tradeweb.TraderCode}</value></property>
		<property name="bestxAlgoID"><value>${Tradeweb.ExecutionDecisionMakerID}</value></property>
		<property name="defaultShortSelling"><value>${Tradeweb.defaultShortSell}</value></property>
		<property name="investmentDecisorID"><value>${Tradeweb.InvestmentDecisionMakerID}</value></property>
		<property name="investmentDecisorRoleQualifier"><value>${Tradeweb.InvestmentDecisionRoleQualifier}</value></property>
		<property name="defaultTradingMode"><value>${Tradeweb.defaultTradingMode}</value></property> 
		<property name="defaultTradingCapacity"><value>${Tradeweb.defaultCapacity}</value></property>
        <property name="fixConfigFileName" value="fix-tradestac-tradexpress.properties" />
	</bean>
<!--  
    <bean id="tradexpressConnector" class="it.softsolutions.bestx.connections.tradeweb.simulated.BogusTradeXpressConnection" init-method="init">
		<property name="tradeXpressConnectionListener"><ref bean="tradewebMarket"/></property>
        <property name="cancelIsins">
        	<list>
        	</list>
		</property>
        <property name="rejectIsins">
        	<list>
        		<value>XS0076085603</value>
        		<value>XS0563306314</value>
        		<value>CA563469CN38</value>
        	</list>
		</property>
	</bean>
--><!--
    <bean id="simulatedTradexpressConnector" class="it.softsolutions.bestx.connections.tradeweb.tradexpress.TradeXpressConnectionImpl" init-method="init">
		<property name="tradeXpressConnectionListener"><ref bean="tradewebMarket"/></property>
		<property name="tradeStacConnectionListener"><ref bean="tradewebMarket"/></property>
		<property name="tradeStacClientSession">
			<bean class="it.softsolutions.tradestac.client.TradeStacClient"></bean>
		</property>
		<property name="traderCode"><value>${tradexpress.traderCode}</value></property>
        <property name="fixConfigFileName" value="fix-tradestac-tradexpress.properties" />
	</bean>
-->
	<!-- ====================================================================== -->
    <!-- ==== MarketAxess ======================================================== -->
    <!-- ====================================================================== -->
    <bean id="marketAxessMarket" class="it.softsolutions.bestx.markets.marketaxess.MarketAxessMarket" init-method="init" lazy-init="true">
		<property name="executor"><ref bean="threadPoolMarketAxess" /></property>
		<property name="proposalDiscarders">
			<list>
			</list>
		</property>
        <property name="operationRegistry"><ref bean="defaultOperationRegistry"></ref></property>
        <property name="serialNumberService"><ref bean="serialNumberService"></ref></property>
        <property name="orderRespThresholdSeconds"><value>${Order.monitor.notify.timeThresholdInSeconds}</value></property>
        <property name="orderRespIntervalTimeInSecs"><value>${Order.monitor.intervalInSeconds}</value></property>
        <property name="pricesRespThresholdSeconds"><value>${Price.monitor.notify.timeThresholdInSeconds}</value></property>
        <property name="pricesRespIntervalTimeInSecs"><value>${Price.monitor.intervalInSeconds}</value></property>
        <property name="executionsRespIntervalTimeInSecs"><value>${Execution.monitor.intervalInSeconds}</value></property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"/></property>
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"/></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"/></property>
        <property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"/></property>
        <property name="tradeStacPreTradeConnection"><ref bean="marketAxessPreTradeConnector"/></property>
        <property name="tradeConnection"><ref bean="autoExecutionTradeConnector"/></property>
	</bean>
	
    <bean id="marketAxessPreTradeConnector" class="it.softsolutions.bestx.connections.marketaxess.MarketAxessInventoryAndLiveMarketFeedConnector" init-method="init">
         <property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"/></property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"/></property>
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"/></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"/></property>
        <property name="tradeStacPreTradeConnectionListener"><ref bean="marketAxessMarket"/></property>
        <property name="tradeStacConnectionListener"><ref bean="marketAxessMarket"/></property>
		<property name="tradeStacClientSession">
			<bean class="it.softsolutions.tradestac2.client.TradeStacClient"/>
		</property>
        <property name="fixConfigFileName"><value>fix-tradestac-marketaxess-buyside-prices.properties</value></property>
    </bean>
     
    <bean id="autoExecutionTradeConnector" class="it.softsolutions.bestx.connections.marketaxess.MarketAxessAutoExecutionConnector" init-method="init">
 		<property name="tradeStacTradeConnectionListener"><ref bean="marketAxessMarket"/></property>
        <property name="tradeStacConnectionListener"><ref bean="marketAxessMarket"/></property>
        <property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"/></property>
        <property name="marketMakerFinder"><ref bean="dbBasedMarketMakerFinder"/></property>
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"/></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"/></property>
		<property name="tradeStacClientSession">
			<bean class="it.softsolutions.tradestac2.client.TradeStacClient"/>
		</property>
		<property name="tolerance"><value>${Marketaxess.Order.Tolerance}</value></property>
		<property name="numCompetitiveQuotes"><value>${Marketaxess.Order.NumCompetitiveQuotes}</value></property>
		<property name="includeDealers"><value>${Marketaxess.Order.MinDealers}</value></property>
		<property name="minTimeDelay"><value>${Marketaxess.Order.MinTimeDelay}</value></property>
		<property name="validSeconds"><value>${Marketaxess.Order.ValidSeconds}</value></property>
		<property name="traderPartyID"><value>${Marketaxess.Order.TraderPartyID}</value></property>
		<property name="investmentDecisionIDSource"><value>${MarketAxess.InvestmentDecisionMakerIDSource}</value></property>
		<property name="investmentDecisionQualifier"><value>${MarketAxess.InvestmentDecisionQualifier}</value></property>
		<property name="investmentDecisorID"><value>${MarketAxess.InvestmentDecisionMakerID}</value></property>
		<property name="executionDecisionID"><value>${MarketAxess.ExecutionDecisionMakerID}</value></property>
		<property name="defaultTradingCapacity"><value>${MarketAxess.defaultCapacity}</value></property>
		<property name="defaultShortSelling"><value>${MarketAxess.DefaultShortSell}</value></property>
        <property name="fixConfigFileName"><value>fix-tradestac-marketaxess-buyside-trade.properties</value></property>
        <property name="addBlockedDealers"><value>${MarketAxess.AddBlockedDealers}</value></property>
        <property name="marketSegmentID"><value>${MarketAxess.destinationMICCode}</value></property>
 	</bean>
	

    <bean id="ib4jOperatorConsoleAdapter" class="it.softsolutions.bestx.connections.CSIB4JOperatorConsoleAdapter" init-method="init">
		<!-- TECHNICAL PARAMETERS -->
        <property name="operationRegistry"><ref bean="defaultOperationRegistry"></ref></property>
		<!-- property name="priceService"><ref bean="priceService"></ref></property -->
		<property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"></ref></property>
		<property name="sqlInstrumentDao"><ref bean="sqlInstrumentDao"></ref></property>
        <property name="systemStateSelector"><ref bean="csStrategy"></ref></property>
        <property name="operationStateAuditDao"><ref bean="sqlOperationStateAuditDao"></ref></property>
        <property name="marketConnectionRegistry"><ref bean="configurableMarketConnectionRegistry"></ref></property>
		<property name="connectionRegistry"><ref bean="connectionRegistry"></ref></property>
        <property name="serviceName"><value>BestXEngine</value></property>
        <property name="servicePartition"><value>Production</value></property>
        <property name="username"><value></value></property>
        <property name="password"><value></value></property>
        <property name="executor"><ref bean="threadPoolOMS1"></ref></property>
		<property name="visibleStatesList">
			<list>
				<value>WarningState</value>
				<value>ErrorState</value>
				<value>OrderRejectableState</value>
				<value>OrderNotExecutableState</value>
				<value>AutoCurandoStatus</value>
				<value>CurandoStatus</value>
				<value>BBG_StandbyState</value>
				<value>ManualManageState</value>
			</list>
		</property>
        <property name="customService"><ref bean="grdLiteService"></ref></property>
        <property name="userModelFinder"><ref bean="dbUserModelFinder"></ref></property>
	</bean>
	
	<bean id="dbUserModelFinder" class="it.softsolutions.bestx.finders.db.DBUserModelFinder" init-method="init">
        <property name="userModelDao"><ref bean="hibernateUserModelDao"></ref></property>
	</bean>
	
	<bean id="hibernateUserModelDao" class="it.softsolutions.bestx.dao.hibernate.HibernateUserModelDao">
        <property name="sessionFactory"><ref bean="sessionFactory"></ref></property>
	</bean>

    <!--bean id="mqPriceDiscoveryOperatorConsoleAdapter" class="it.softsolutions.bestx.connections.MQPriceDiscoveryOperatorConsoleAdapter" init-method="init">
        <property name="operationRegistry"><ref bean="defaultOperationRegistry"></ref></property>
		<property name="instrumentFinder"><ref bean="dbBasedInstrumentFinder"></ref></property>
		<property name="sqlInstrumentDao"><ref bean="sqlInstrumentDao"></ref></property>
        <property name="serviceName"><value>BestXPriceDiscoveryEngine</value></property>
        <property name="executor"><ref bean="threadPoolMQPriceDiscoveryAdapter"></ref></property>
        <property name="customService"><ref bean="grdLiteService"></ref></property>
	</bean>
  -->
    <bean id="ordersEndOfDayService" class="it.softsolutions.bestx.services.CSOrdersEndOfDayService" init-method="init">
        <property name="executor"><ref bean="threadPoolOMS1"></ref></property>
        <property name="operationStateAuditDao"><ref bean="sqlOperationStateAuditDao"></ref></property>
        <property name="operationRegistry"><ref bean="defaultOperationRegistry"></ref></property>
        <property name="ordersEndOfDayHour"><value>${OrdersEndOfDay.hour}</value></property>
        <property name="ordersEndOfDayMinute"><value>${OrdersEndOfDay.minute}</value></property>
        <property name="ordersEndOfDayRestartDelay"><value>${OrdersEndOfDay.restartDelayInSeconds}</value></property>
        <property name="limitFileNonUSEndOfDayHour"><value>${LimitFileNonUSEndOfDay.hour}</value></property>
        <property name="limitFileNonUSEndOfDayMinute"><value>${LimitFileNonUSEndOfDay.minute}</value></property>
        <property name="limitFileUSEndOfDayHour"><value>${LimitFileUSEndOfDay.hour}</value></property>
        <property name="limitFileUSEndOfDayMinute"><value>${LimitFileUSEndOfDay.minute}</value></property>
        <property name="monitorToExecutionHour"><value>${Status.MonitorToExecution.hour:#{null}}</value></property>
        <property name="monitorToExecutionMinute"><value>${Status.MonitorToExecution.minute:#{null}}</value></property>
        <property name="executionToMonitorHour"><value>${Status.ExecutionToMonitor.hour:#{null}}</value></property>
        <property name="executionToMonitorMinute"><value>${Status.ExecutionToMonitor.minute:#{null}}</value></property>
		<property name="applicationStatus" ref="applicationStatus" />
	</bean>
    <bean id="defaultBookProposalBuilder" class="it.softsolutions.bestx.services.BookProposalBuilder" init-method="init">
        <property name="marketFinder"><ref bean="dbBasedMarketFinder"></ref></property>
        <property name="venueFinder"><ref bean="dbBasedVenueFinder"></ref></property>
        <property name="marketSecurityStatusService"><ref bean="marketSecurityStatusService"></ref></property>
	</bean>
    <bean id="priceForgeCustomerManager" class="it.softsolutions.bestx.services.PriceForgeCustomerManager" init-method="init">
        <property name="customerManagerDAO"><ref bean="sqlCustomerManagerDAO"></ref></property>
	</bean>

	<bean id="priceServiceProvider" class="it.softsolutions.bestx.services.PriceServiceProvider">
		<property name="priceServices">
			<map>
				<entry key="NORMAL_PRICEDISCOVERY" value-ref="normalPriceService" />
				<entry key="LIMIT_FILE_PRICEDISCOVERY" value-ref="limitFilePriceService" />
				<entry key="ONLY_PRICEDISCOVERY" value-ref="pDOnlyPriceService" />
			</map>
		</property>
	</bean>
    <bean id="serialNumberServiceProvider" class="it.softsolutions.bestx.services.SerialNumberServiceProvider">
        <property name="serialNumberService"><ref bean="serialNumberService"></ref></property>
	</bean>

    <bean id="operationStateAuditDAOProvider" class="it.softsolutions.bestx.services.OperationStateAuditDAOProvider">
        <property name="operationStateAuditDao"><ref bean="sqlOperationStateAuditDao"></ref></property>
	</bean>
    <bean id="grdLiteService" class="it.softsolutions.bestx.services.grdlite.GRDLiteService">
		<constructor-arg ref="defaultOperationRegistry" />
		<!-- the service, as default, is activated -->
        <property name="active"><value>true</value></property>
        <!-- maximum number of reconnections, -1 means never stop trying to reconnect, it
            is also the default value -->
        <property name="reconnectionMaxTries"><value>-1</value></property>
        <property name="encryptor"><ref bean="configurationEncryptor"></ref></property>
        <property name="serviceName"><value>GRDLiteService</value></property>
	</bean>

    <bean id="configurationPropertyLoader" class="it.softsolutions.bestx.services.CSConfigurationPropertyLoader">
        <property name="jdbcTemplate"><ref bean="jdbcTemplate"></ref></property>
        <property name="configurationTable"><value>BestXConfiguration</value></property>
   </bean>	
   
    <bean id="businessValuesMonitor" class="it.softsolutions.bestx.services.BusinessValuesMonitor" init-method="init">
        <property name="statsIntervalTimeInSecs"><value>60</value></property>
    	<property name="marketList">
			<list>
				<ref bean="bloombergMarket" />
				<ref bean="tradewebMarket" />
				<ref bean="marketAxessMarket" />
			</list>
		</property>
	</bean>   
</beans>